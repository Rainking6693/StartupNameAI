import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Shield, Loader, X } from 'lucide-react';\n\nconst UserInfoModal = ({ isOpen, onClose, onSubmit, domain }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    name: '',\n    phone: '',\n    company: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email';\n    }\n    \n    if (!formData.name) {\n      newErrors.name = 'Name is required';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n    \n    setIsSubmitting(true);\n    try {\n      await onSubmit(formData);\n    } catch (error) {\n      console.error('Form submission failed:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  const handleClose = () => {\n    setFormData({ email: '', name: '', phone: '', company: '' });\n    setErrors({});\n    onClose();\n  };\n  \n  if (!isOpen) return null;\n  \n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-6 z-50\"\n        onClick={handleClose}\n      >\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.9, opacity: 0 }}\n          className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8 max-w-md w-full border border-white/20\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"text-center flex-1\">\n              <Shield className=\"w-12 h-12 text-green-400 mx-auto mb-4\" />\n              <h3 className=\"text-2xl font-bold text-white mb-2\">Reserve {domain?.domain}</h3>\n              <p className=\"text-white/80\">Please provide your information to complete the reservation</p>\n            </div>\n            <button\n              onClick={handleClose}\n              className=\"text-white/60 hover:text-white transition-colors ml-4\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n          </div>\n          \n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label className=\"block text-white font-medium mb-2\">Email Address *</label>\n              <input\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => setFormData({...formData, email: e.target.value})}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl focus:ring-2 focus:ring-white/50 focus:border-transparent text-white placeholder-white/50\"\n                placeholder=\"your@email.com\"\n                required\n              />\n              {errors.email && <p className=\"text-red-400 text-sm mt-1\">{errors.email}</p>}\n            </div>\n            \n            <div>\n              <label className=\"block text-white font-medium mb-2\">Full Name *</label>\n              <input\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData({...formData, name: e.target.value})}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl focus:ring-2 focus:ring-white/50 focus:border-transparent text-white placeholder-white/50\"\n                placeholder=\"John Doe\"\n                required\n              />\n              {errors.name && <p className=\"text-red-400 text-sm mt-1\">{errors.name}</p>}\n            </div>\n            \n            <div>\n              <label className=\"block text-white font-medium mb-2\">Phone Number</label>\n              <input\n                type=\"tel\"\n                value={formData.phone}\n                onChange={(e) => setFormData({...formData, phone: e.target.value})}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl focus:ring-2 focus:ring-white/50 focus:border-transparent text-white placeholder-white/50\"\n                placeholder=\"+1 (555) 123-4567\"\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-white font-medium mb-2\">Company Name</label>\n              <input\n                type=\"text\"\n                value={formData.company}\n                onChange={(e) => setFormData({...formData, company: e.target.value})}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl focus:ring-2 focus:ring-white/50 focus:border-transparent text-white placeholder-white/50\"\n                placeholder=\"Your Startup Name\"\n              />\n            </div>\n            \n            <div className=\"bg-blue-500/20 rounded-xl p-4 border border-blue-500/30\">\n              <div className=\"text-blue-200 text-sm\">\n                <strong>Domain:</strong> {domain?.domain}<br/>\n                <strong>Price:</strong> ${domain?.price}/year<br/>\n                <strong>Registrar:</strong> {domain?.registrar}\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-3 mt-6\">\n              <button\n                type=\"button\"\n                onClick={handleClose}\n                className=\"flex-1 bg-white/10 hover:bg-white/20 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"flex-1 bg-gradient-to-r from-green-500 to-emerald-500 text-white px-6 py-3 rounded-xl font-semibold hover:from-green-600 hover:to-emerald-600 transition-all duration-300 disabled:opacity-50\"\n              >\n                {isSubmitting ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin mr-2 inline\" />\n                    Reserving...\n                  </>\n                ) : (\n                  'Reserve Domain'\n                )}\n              </button>\n            </div>\n          </form>\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default UserInfoModal;"