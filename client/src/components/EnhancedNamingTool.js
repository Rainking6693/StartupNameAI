import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  ArrowRight, \n  ArrowLeft, \n  Star, \n  Cpu,\n  Target,\n  Zap,\n  CheckCircle,\n  Lightbulb,\n  Building,\n  Palette,\n  Hash,\n  Clock,\n  AlertCircle,\n  Settings,\n  Filter,\n  BarChart3,\n  Crown,\n  Sparkles\n} from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport enhancedAI from '../services/enhancedAI';\n\nconst EnhancedNamingTool = () => {\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedPackage, setSelectedPackage] = useState('professional');\n  const [advancedOptions, setAdvancedOptions] = useState({\n    qualityFilter: true,\n    includeVariations: true,\n    industryDeepDive: true,\n    batchSize: 100\n  });\n  const [formData, setFormData] = useState({\n    keywords: [],\n    industry: '',\n    style: '',\n    description: '',\n    targetAudience: '',\n    brandPersonality: []\n  });\n\n  const totalSteps = 5; // Added advanced options step\n\n  // Enhanced industry options with AI insights\n  const industries = [\n    { \n      id: 'tech', \n      name: 'Technology', \n      icon: '💻', \n      desc: 'SaaS, apps, software platforms',\n      aiInsights: 'AI optimized for tech naming patterns'\n    },\n    { \n      id: 'health', \n      name: 'Healthcare', \n      icon: '🏥', \n      desc: 'Medical, wellness, fitness',\n      aiInsights: 'Trust-focused naming algorithms'\n    },\n    { \n      id: 'fintech', \n      name: 'FinTech', \n      icon: '💳', \n      desc: 'Banking, payments, crypto',\n      aiInsights: 'Security-oriented name generation'\n    },\n    { \n      id: 'ecommerce', \n      name: 'E-commerce', \n      icon: '🛒', \n      desc: 'Online retail, marketplaces',\n      aiInsights: 'Conversion-optimized naming'\n    },\n    { \n      id: 'education', \n      name: 'Education', \n      icon: '🎓', \n      desc: 'EdTech, learning, training',\n      aiInsights: 'Authority-building name patterns'\n    },\n    { \n      id: 'food', \n      name: 'Food & Beverage', \n      icon: '🍽️', \n      desc: 'Restaurants, delivery, food tech',\n      aiInsights: 'Appetite-appealing linguistics'\n    },\n    { \n      id: 'travel', \n      name: 'Travel', \n      icon: '✈️', \n      desc: 'Tourism, booking, hospitality',\n      aiInsights: 'Adventure-inspiring names'\n    },\n    { \n      id: 'other', \n      name: 'Other', \n      icon: '🎯', \n      desc: 'Tell us more about your industry',\n      aiInsights: 'Custom AI analysis'\n    }\n  ];\n\n  // Enhanced style preferences with psychology insights\n  const styles = [\n    { \n      id: 'modern', \n      name: 'Modern', \n      icon: '⚡', \n      desc: 'Clean, tech-forward, innovative',\n      psychology: 'Appeals to early adopters and tech-savvy users'\n    },\n    { \n      id: 'classic', \n      name: 'Classic', \n      icon: '🏛️', \n      desc: 'Timeless, established, trustworthy',\n      psychology: 'Builds trust with traditional audiences'\n    },\n    { \n      id: 'creative', \n      name: 'Creative', \n      icon: '🎨', \n      desc: 'Unique, artistic, memorable',\n      psychology: 'Attracts creative and artistic demographics'\n    },\n    { \n      id: 'professional', \n      name: 'Professional', \n      icon: '💼', \n      desc: 'Corporate, enterprise-ready',\n      psychology: 'Resonates with B2B and enterprise clients'\n    }\n  ];\n\n  // Package options with enhanced features\n  const packages = {\n    starter: {\n      name: 'Starter',\n      price: 49,\n      originalPrice: 98,\n      names: 50,\n      features: [\n        '50 AI-generated names',\n        'Basic trademark search (US)',\n        'Brand strategy PDF (8 pages)',\n        '3 logo concepts',\n        'Domain availability check',\n        'Basic legal compliance'\n      ],\n      badge: 'BEST VALUE'\n    },\n    professional: {\n      name: 'Professional',\n      price: 79,\n      originalPrice: 158,\n      names: 150,\n      features: [\n        '150 premium AI names',\n        'Global trademark research',\n        'Comprehensive brand strategy (15 pages)',\n        '6 logo concepts + guidelines',\n        'Premium domain suggestions',\n        'Industry compliance review',\n        'Competitor analysis report'\n      ],\n      badge: 'MOST POPULAR'\n    },\n    enterprise: {\n      name: 'Enterprise',\n      price: 159,\n      originalPrice: 318,\n      names: 300,\n      features: [\n        '300 premium quality names',\n        'Global trademark + 6-month monitoring',\n        'Executive brand strategy (25+ pages)',\n        '12 custom logo designs',\n        'Legal compliance (all jurisdictions)',\n        'White-label naming rights',\n        'Priority AI processing',\n        'Custom brand consultation'\n      ],\n      badge: 'ENTERPRISE'\n    }\n  };\n\n  // Brand personality options\n  const brandPersonalities = [\n    { id: 'innovative', name: 'Innovative', icon: '🚀' },\n    { id: 'trustworthy', name: 'Trustworthy', icon: '🛡️' },\n    { id: 'friendly', name: 'Friendly', icon: '😊' },\n    { id: 'premium', name: 'Premium', icon: '👑' },\n    { id: 'playful', name: 'Playful', icon: '🎮' },\n    { id: 'sophisticated', name: 'Sophisticated', icon: '🎩' }\n  ];\n\n  const handleNext = () => {\n    if (currentStep < totalSteps) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      handleGenerate();\n    }\n  };\n\n  const handleBack = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleKeywordAdd = (keyword) => {\n    if (keyword.trim() && formData.keywords.length < 8 && !formData.keywords.includes(keyword.trim())) {\n      setFormData({\n        ...formData,\n        keywords: [...formData.keywords, keyword.trim()]\n      });\n    }\n  };\n\n  const handleKeywordRemove = (keyword) => {\n    setFormData({\n      ...formData,\n      keywords: formData.keywords.filter(k => k !== keyword)\n    });\n  };\n\n  const handlePersonalityToggle = (personality) => {\n    const current = formData.brandPersonality || [];\n    const updated = current.includes(personality)\n      ? current.filter(p => p !== personality)\n      : [...current, personality];\n    \n    setFormData({\n      ...formData,\n      brandPersonality: updated\n    });\n  };\n\n  const handleGenerate = async () => {\n    console.log('🚀 ENHANCED GENERATE CLICKED - Starting AI process...');\n    setIsLoading(true);\n    setError('');\n    \n    try {\n      console.log('📊 Enhanced form data:', formData);\n      console.log('⚙️ Advanced options:', advancedOptions);\n      console.log('📦 Selected package:', selectedPackage);\n      \n      // Validate form data\n      if (!formData.industry || !formData.style || formData.keywords.length === 0) {\n        throw new Error('Please complete all required fields');\n      }\n      \n      // Get package configuration\n      const packageConfig = packages[selectedPackage];\n      const nameCount = packageConfig.names;\n      \n      console.log('🔄 Generating', nameCount, 'names with enhanced AI...');\n      \n      // Generate names using enhanced AI service\n      const result = await enhancedAI.generateBatchNames(formData, {\n        count: nameCount,\n        qualityFilter: advancedOptions.qualityFilter,\n        includeVariations: advancedOptions.includeVariations,\n        industryDeepDive: advancedOptions.industryDeepDive\n      });\n      \n      console.log('✅ Enhanced AI generation complete:', result);\n      \n      if (!result || !result.names || result.names.length === 0) {\n        throw new Error('No names were generated by enhanced AI');\n      }\n\n      // Create enhanced session data\n      const sessionId = Date.now().toString();\n      const sessionData = {\n        formData,\n        advancedOptions,\n        selectedPackage,\n        packageConfig,\n        results: result.names,\n        metadata: result.metadata,\n        timestamp: new Date().toISOString(),\n        enhanced: true\n      };\n      \n      console.log('💾 Saving enhanced session data:', sessionId);\n      \n      // Store in localStorage with enhanced data\n      try {\n        localStorage.setItem(`naming_session_${sessionId}`, JSON.stringify(sessionData));\n        console.log('✅ Enhanced session data saved');\n        \n        // Verify the data was saved\n        const savedData = localStorage.getItem(`naming_session_${sessionId}`);\n        if (!savedData) {\n          throw new Error('Failed to save enhanced session data');\n        }\n        \n      } catch (storageError) {\n        console.error('❌ Failed to save to localStorage:', storageError);\n        // Continue anyway - results page can handle missing data\n      }\n\n      console.log('🧭 Navigating to enhanced results:', `/results/${sessionId}`);\n      \n      // Navigate to results\n      navigate(`/results/${sessionId}`, { replace: true });\n\n    } catch (error) {\n      console.error('❌ Enhanced name generation failed:', error);\n      setError(error.message || 'Failed to generate names. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  const canProceed = () => {\n    switch (currentStep) {\n      case 1: return formData.industry !== '';\n      case 2: return formData.style !== '';\n      case 3: return formData.keywords.length > 0;\n      case 4: return selectedPackage !== '';\n      case 5: return true;\n      default: return false;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-800 flex items-center justify-center\">\n        <div className=\"text-center max-w-md mx-auto\">\n          <motion.div\n            animate={{ rotate: 360 }}\n            transition={{ duration: 2, repeat: Infinity, ease: \"linear\" }}\n            className=\"w-20 h-20 bg-gradient-to-r from-white to-purple-200 rounded-full flex items-center justify-center mx-auto mb-8\"\n          >\n            <Sparkles className=\"w-10 h-10 text-purple-900\" />\n          </motion.div>\n          <h2 className=\"text-3xl font-bold text-white mb-4\">Enhanced AI is Creating Your Names</h2>\n          <p className=\"text-white/80 mb-6\">Using advanced algorithms to generate {packages[selectedPackage].names} premium startup names...</p>\n          \n          <div className=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 mb-6\">\n            <h3 className=\"text-lg font-semibold text-white mb-4\">AI Processing Steps:</h3>\n            <div className=\"space-y-3\">\n              {[\n                'Analyzing industry patterns...',\n                'Processing linguistic structures...',\n                'Applying brand psychology...',\n                'Generating name variants...',\n                'Scoring brandability...',\n                'Ranking by quality...'\n              ].map((step, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: index * 1.2 }}\n                  className=\"text-left text-white/80 flex items-center space-x-3\"\n                >\n                  <CheckCircle className=\"w-4 h-4 text-green-400 flex-shrink-0\" />\n                  <span className=\"text-sm\">{step}</span>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"text-white/60 text-sm\">\n            <p>Package: {packages[selectedPackage].name}</p>\n            <p>Names: {packages[selectedPackage].names}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-800\">\n      {/* Enhanced Header */}\n      <div className=\"px-6 py-6\">\n        <div className=\"max-w-4xl mx-auto flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-xl flex items-center justify-center\">\n              <Crown className=\"w-6 h-6 text-white\" />\n            </div>\n            <div>\n              <span className=\"text-2xl font-bold text-white\">Enhanced AI Naming</span>\n              <div className=\"text-yellow-300 text-sm font-semibold\">Enterprise-Grade Platform</div>\n            </div>\n          </div>\n          \n          <button \n            onClick={() => navigate('/')}\n            className=\"text-white/80 hover:text-white transition-colors\"\n          >\n            ← Back to Home\n          </button>\n        </div>\n      </div>\n\n      {/* Enhanced Progress Bar */}\n      <div className=\"px-6 mb-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-white/80\">Step {currentStep} of {totalSteps}</span>\n            <span className=\"text-sm font-medium text-white/80\">{Math.round((currentStep / totalSteps) * 100)}% Complete</span>\n          </div>\n          <div className=\"w-full bg-white/20 rounded-full h-3\">\n            <motion.div\n              className=\"bg-gradient-to-r from-yellow-400 to-orange-500 h-3 rounded-full\"\n              initial={{ width: 0 }}\n              animate={{ width: `${(currentStep / totalSteps) * 100}%` }}\n              transition={{ duration: 0.5 }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"px-6 mb-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"bg-red-500/20 border border-red-500/30 rounded-xl p-4 flex items-center space-x-3\">\n              <AlertCircle className=\"w-5 h-5 text-red-400\" />\n              <span className=\"text-red-200\">{error}</span>\n              <button \n                onClick={() => setError('')}\n                className=\"ml-auto text-red-400 hover:text-red-200\"\n              >\n                ×\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Main Content */}\n      <div className=\"px-6 pb-20\">\n        <div className=\"max-w-4xl mx-auto\">\n          <AnimatePresence mode=\"wait\">\n            {/* Step 1: Industry Selection (Enhanced) */}\n            {currentStep === 1 && (\n              <motion.div\n                key=\"step1\"\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: -20 }}\n                transition={{ duration: 0.3 }}\n              >\n                <div className=\"text-center mb-12\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-blue-400 to-cyan-400 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                    <Building className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h2 className=\"text-4xl font-bold text-white mb-4\">What's your industry?</h2>\n                  <p className=\"text-xl text-white/80\">Our enhanced AI understands 50,000+ industry naming patterns</p>\n                </div>\n\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  {industries.map((industry) => (\n                    <motion.div\n                      key={industry.id}\n                      whileHover={{ y: -4, scale: 1.02 }}\n                      className={`bg-white/10 backdrop-blur-sm rounded-2xl p-6 cursor-pointer transition-all duration-300 border-2 ${\n                        formData.industry === industry.id \n                          ? 'border-yellow-400 shadow-lg bg-white/20' \n                          : 'border-transparent hover:bg-white/15'\n                      }`}\n                      onClick={() => setFormData({...formData, industry: industry.id})}\n                    >\n                      <div className=\"flex items-start space-x-4\">\n                        <div className=\"text-3xl\">{industry.icon}</div>\n                        <div className=\"flex-1\">\n                          <h3 className=\"text-lg font-bold text-white mb-1\">{industry.name}</h3>\n                          <p className=\"text-white/70 text-sm mb-2\">{industry.desc}</p>\n                          <div className=\"bg-yellow-400/20 text-yellow-300 px-2 py-1 rounded-full text-xs font-semibold\">\n                            {industry.aiInsights}\n                          </div>\n                        </div>\n                      </div>\n                    </motion.div>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n\n            {/* Step 2: Style Selection (Enhanced) */}\n            {currentStep === 2 && (\n              <motion.div\n                key=\"step2\"\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: -20 }}\n                transition={{ duration: 0.3 }}\n              >\n                <div className=\"text-center mb-12\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-purple-400 to-pink-400 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                    <Palette className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h2 className=\"text-4xl font-bold text-white mb-4\">What's your style?</h2>\n                  <p className=\"text-xl text-white/80\">Choose the brand personality that resonates with your target audience</p>\n                </div>\n\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  {styles.map((style) => (\n                    <motion.div\n                      key={style.id}\n                      whileHover={{ y: -4, scale: 1.02 }}\n                      className={`bg-white/10 backdrop-blur-sm rounded-2xl p-8 cursor-pointer transition-all duration-300 border-2 ${\n                        formData.style === style.id \n                          ? 'border-yellow-400 shadow-lg bg-white/20' \n                          : 'border-transparent hover:bg-white/15'\n                      }`}\n                      onClick={() => setFormData({...formData, style: style.id})}\n                    >\n                      <div className=\"text-center\">\n                        <div className=\"text-4xl mb-4\">{style.icon}</div>\n                        <h3 className=\"text-xl font-bold text-white mb-2\">{style.name}</h3>\n                        <p className=\"text-white/70 mb-3\">{style.desc}</p>\n                        <div className=\"bg-purple-500/20 text-purple-300 px-3 py-1 rounded-full text-xs\">\n                          {style.psychology}\n                        </div>\n                      </div>\n                    </motion.div>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n\n            {/* Step 3: Keywords & Brand Personality */}\n            {currentStep === 3 && (\n              <motion.div\n                key=\"step3\"\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: -20 }}\n                transition={{ duration: 0.3 }}\n              >\n                <div className=\"text-center mb-12\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-green-400 to-emerald-400 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                    <Hash className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h2 className=\"text-4xl font-bold text-white mb-4\">Define your brand</h2>\n                  <p className=\"text-xl text-white/80\">Keywords and personality traits that represent your startup</p>\n                </div>\n\n                <div className=\"max-w-3xl mx-auto space-y-8\">\n                  {/* Keywords Section */}\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8\">\n                    <h3 className=\"text-xl font-bold text-white mb-4\">Keywords (1-8 words)</h3>\n                    <KeywordInput \n                      keywords={formData.keywords}\n                      onAdd={handleKeywordAdd}\n                      onRemove={handleKeywordRemove}\n                      maxKeywords={8}\n                    />\n                  </div>\n\n                  {/* Brand Personality */}\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8\">\n                    <h3 className=\"text-xl font-bold text-white mb-4\">Brand Personality (Optional)</h3>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                      {brandPersonalities.map((personality) => (\n                        <button\n                          key={personality.id}\n                          onClick={() => handlePersonalityToggle(personality.id)}\n                          className={`p-3 rounded-xl text-sm font-medium transition-all duration-300 ${\n                            formData.brandPersonality?.includes(personality.id)\n                              ? 'bg-yellow-400/20 text-yellow-300 border border-yellow-400/50'\n                              : 'bg-white/10 text-white/80 hover:bg-white/20'\n                          }`}\n                        >\n                          <div className=\"text-lg mb-1\">{personality.icon}</div>\n                          {personality.name}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Additional Details */}\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8\">\n                    <h3 className=\"text-xl font-bold text-white mb-4\">Additional Details</h3>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"block text-white font-medium mb-2\">\n                          Target Audience (Optional)\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={formData.targetAudience}\n                          onChange={(e) => setFormData({...formData, targetAudience: e.target.value})}\n                          placeholder=\"e.g., Small business owners, Tech professionals, Students\"\n                          className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl focus:ring-2 focus:ring-yellow-400/50 focus:border-transparent text-white placeholder-white/50\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-white font-medium mb-2\">\n                          Brief Description (Optional)\n                        </label>\n                        <textarea\n                          value={formData.description}\n                          onChange={(e) => setFormData({...formData, description: e.target.value})}\n                          placeholder=\"Tell us more about your startup idea...\"\n                          className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl focus:ring-2 focus:ring-yellow-400/50 focus:border-transparent resize-none text-white placeholder-white/50\"\n                          rows={3}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n\n            {/* Step 4: Package Selection */}\n            {currentStep === 4 && (\n              <motion.div\n                key=\"step4\"\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: -20 }}\n                transition={{ duration: 0.3 }}\n              >\n                <div className=\"text-center mb-12\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-yellow-400 to-orange-400 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                    <Crown className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h2 className=\"text-4xl font-bold text-white mb-4\">Choose Your Package</h2>\n                  <p className=\"text-xl text-white/80\">Select the level of AI analysis and deliverables you need</p>\n                  \n                  <div className=\"bg-red-600/20 backdrop-blur-sm border border-red-500/30 rounded-xl p-4 max-w-lg mx-auto mt-6\">\n                    <div className=\"flex items-center justify-center space-x-2 text-yellow-300\">\n                      <Clock className=\"w-5 h-5 animate-pulse\" />\n                      <span className=\"font-bold\">LIMITED TIME: 50% OFF ALL PACKAGES</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"grid md:grid-cols-3 gap-6\">\n                  {Object.entries(packages).map(([key, pkg]) => (\n                    <motion.div\n                      key={key}\n                      whileHover={{ y: -4, scale: 1.02 }}\n                      className={`bg-white/10 backdrop-blur-sm rounded-2xl p-6 cursor-pointer transition-all duration-300 border-2 relative ${\n                        selectedPackage === key \n                          ? 'border-yellow-400 shadow-lg bg-white/20' \n                          : 'border-transparent hover:bg-white/15'\n                      } ${key === 'professional' ? 'ring-2 ring-yellow-400/50' : ''}`}\n                      onClick={() => setSelectedPackage(key)}\n                    >\n                      {pkg.badge && (\n                        <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                          <div className=\"bg-gradient-to-r from-yellow-400 to-orange-400 text-black px-4 py-1 rounded-full font-bold text-xs\">\n                            {pkg.badge}\n                          </div>\n                        </div>\n                      )}\n                      \n                      <div className=\"text-center mb-6 pt-2\">\n                        <h3 className=\"text-xl font-bold text-white mb-2\">{pkg.name}</h3>\n                        <div className=\"text-3xl font-black text-white mb-2\">\n                          <span className=\"line-through text-gray-400 text-lg\">${pkg.originalPrice}</span> ${pkg.price}\n                        </div>\n                        <div className=\"text-green-400 font-semibold text-sm\">Save ${pkg.originalPrice - pkg.price}</div>\n                        <div className=\"text-yellow-300 font-semibold text-sm mt-1\">{pkg.names} AI Names</div>\n                      </div>\n                      \n                      <div className=\"space-y-2 mb-6\">\n                        {pkg.features.map((feature, index) => (\n                          <div key={index} className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"w-4 h-4 text-green-400 flex-shrink-0\" />\n                            <span className=\"text-white/90 text-sm\">{feature}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </motion.div>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n\n            {/* Step 5: Advanced Options & Review */}\n            {currentStep === 5 && (\n              <motion.div\n                key=\"step5\"\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: -20 }}\n                transition={{ duration: 0.3 }}\n              >\n                <div className=\"text-center mb-12\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-purple-400 to-pink-400 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                    <Settings className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h2 className=\"text-4xl font-bold text-white mb-4\">Advanced Options & Review</h2>\n                  <p className=\"text-xl text-white/80\">Fine-tune your AI generation and review your selections</p>\n                </div>\n\n                <div className=\"max-w-3xl mx-auto space-y-8\">\n                  {/* Advanced Options */}\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8\">\n                    <h3 className=\"text-xl font-bold text-white mb-6 flex items-center space-x-2\">\n                      <Settings className=\"w-5 h-5\" />\n                      <span>AI Generation Options</span>\n                    </h3>\n                    \n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-4\">\n                        <label className=\"flex items-center space-x-3\">\n                          <input\n                            type=\"checkbox\"\n                            checked={advancedOptions.qualityFilter}\n                            onChange={(e) => setAdvancedOptions({...advancedOptions, qualityFilter: e.target.checked})}\n                            className=\"w-5 h-5 text-yellow-400 bg-white/10 border-white/20 rounded focus:ring-yellow-400\"\n                          />\n                          <div>\n                            <div className=\"text-white font-medium\">Quality Filter</div>\n                            <div className=\"text-white/60 text-sm\">Only show names with 8.0+ brandability score</div>\n                          </div>\n                        </label>\n                        \n                        <label className=\"flex items-center space-x-3\">\n                          <input\n                            type=\"checkbox\"\n                            checked={advancedOptions.includeVariations}\n                            onChange={(e) => setAdvancedOptions({...advancedOptions, includeVariations: e.target.checked})}\n                            className=\"w-5 h-5 text-yellow-400 bg-white/10 border-white/20 rounded focus:ring-yellow-400\"\n                          />\n                          <div>\n                            <div className=\"text-white font-medium\">Include Variations</div>\n                            <div className=\"text-white/60 text-sm\">Generate linguistic variations of keywords</div>\n                          </div>\n                        </label>\n                      </div>\n                      \n                      <div className=\"space-y-4\">\n                        <label className=\"flex items-center space-x-3\">\n                          <input\n                            type=\"checkbox\"\n                            checked={advancedOptions.industryDeepDive}\n                            onChange={(e) => setAdvancedOptions({...advancedOptions, industryDeepDive: e.target.checked})}\n                            className=\"w-5 h-5 text-yellow-400 bg-white/10 border-white/20 rounded focus:ring-yellow-400\"\n                          />\n                          <div>\n                            <div className=\"text-white font-medium\">Industry Deep Dive</div>\n                            <div className=\"text-white/60 text-sm\">Advanced industry-specific analysis</div>\n                          </div>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Review Summary */}\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8\">\n                    <h3 className=\"text-xl font-bold text-white mb-6\">Generation Summary</h3>\n                    \n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-4\">\n                        <div className=\"flex justify-between items-center p-3 bg-white/10 rounded-xl\">\n                          <span className=\"text-white/80\">Industry:</span>\n                          <span className=\"font-semibold text-white capitalize\">{formData.industry}</span>\n                        </div>\n                        \n                        <div className=\"flex justify-between items-center p-3 bg-white/10 rounded-xl\">\n                          <span className=\"text-white/80\">Style:</span>\n                          <span className=\"font-semibold text-white capitalize\">{formData.style}</span>\n                        </div>\n                        \n                        <div className=\"flex justify-between items-center p-3 bg-white/10 rounded-xl\">\n                          <span className=\"text-white/80\">Package:</span>\n                          <span className=\"font-semibold text-white\">{packages[selectedPackage].name}</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-4\">\n                        <div className=\"p-3 bg-white/10 rounded-xl\">\n                          <span className=\"text-white/80 block mb-2\">Keywords:</span>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {formData.keywords.map(keyword => (\n                              <span key={keyword} className=\"bg-yellow-400/20 text-yellow-300 px-2 py-1 rounded-full text-sm font-medium\">\n                                {keyword}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                        \n                        {formData.brandPersonality && formData.brandPersonality.length > 0 && (\n                          <div className=\"p-3 bg-white/10 rounded-xl\">\n                            <span className=\"text-white/80 block mb-2\">Personality:</span>\n                            <div className=\"flex flex-wrap gap-2\">\n                              {formData.brandPersonality.map(personality => (\n                                <span key={personality} className=\"bg-purple-400/20 text-purple-300 px-2 py-1 rounded-full text-sm font-medium\">\n                                  {personality}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"mt-8 p-6 bg-gradient-to-r from-green-500/20 to-emerald-500/20 rounded-xl border border-green-500/30\">\n                      <h4 className=\"font-bold text-white mb-3 flex items-center space-x-2\">\n                        <Sparkles className=\"w-5 h-5\" />\n                        <span>What you'll get with Enhanced AI:</span>\n                      </h4>\n                      <div className=\"grid md:grid-cols-2 gap-4\">\n                        <ul className=\"space-y-2 text-white/80 text-sm\">\n                          <li className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                            <span>{packages[selectedPackage].names} AI-generated names</span>\n                          </li>\n                          <li className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                            <span>Advanced brandability scoring</span>\n                          </li>\n                          <li className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                            <span>Psychology insights for each name</span>\n                          </li>\n                        </ul>\n                        <ul className=\"space-y-2 text-white/80 text-sm\">\n                          <li className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                            <span>Industry-specific analysis</span>\n                          </li>\n                          <li className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                            <span>Domain-friendly assessment</span>\n                          </li>\n                          <li className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                            <span>Detailed scoring breakdown</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Enhanced Navigation */}\n          <div className=\"flex items-center justify-between mt-12\">\n            <button\n              onClick={handleBack}\n              disabled={currentStep === 1}\n              className={`flex items-center space-x-2 px-6 py-3 rounded-xl font-semibold transition-all duration-300 ${\n                currentStep === 1 \n                  ? 'text-white/40 cursor-not-allowed' \n                  : 'text-white hover:bg-white/10'\n              }`}\n            >\n              <ArrowLeft className=\"w-5 h-5\" />\n              <span>Previous</span>\n            </button>\n\n            <div className=\"flex space-x-2\">\n              {Array.from({ length: totalSteps }, (_, index) => (\n                <div\n                  key={index}\n                  className={`w-3 h-3 rounded-full transition-all duration-300 ${\n                    index + 1 <= currentStep \n                      ? 'bg-yellow-400' \n                      : 'bg-white/30'\n                  }`}\n                />\n              ))}\n            </div>\n\n            <button\n              onClick={handleNext}\n              disabled={!canProceed()}\n              className={`flex items-center space-x-2 px-8 py-3 rounded-xl font-semibold transition-all duration-300 ${\n                canProceed()\n                  ? 'bg-gradient-to-r from-yellow-400 to-orange-500 text-black hover:from-yellow-500 hover:to-orange-600 shadow-lg hover:shadow-xl'\n                  : 'bg-white/20 text-white/40 cursor-not-allowed'\n              }`}\n            >\n              <span>{currentStep === totalSteps ? 'Generate Enhanced Names' : 'Next'}</span>\n              {currentStep === totalSteps ? <Sparkles className=\"w-5 h-5\" /> : <ArrowRight className=\"w-5 h-5\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Keyword Input Component\nconst KeywordInput = ({ keywords, onAdd, onRemove, maxKeywords = 8 }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim()) {\n      onAdd(inputValue);\n      setInputValue('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"mb-6\">\n        <div className=\"flex space-x-3\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Enter a keyword...\"\n            className=\"flex-1 px-4 py-3 bg-white/10 border border-white/20 rounded-xl focus:ring-2 focus:ring-yellow-400/50 focus:border-transparent text-white placeholder-white/50\"\n            maxLength={25}\n          />\n          <button\n            type=\"submit\"\n            disabled={!inputValue.trim() || keywords.length >= maxKeywords}\n            className={`px-6 py-3 rounded-xl font-semibold transition-all duration-300 ${\n              inputValue.trim() && keywords.length < maxKeywords\n                ? 'bg-yellow-400 text-black hover:bg-yellow-500'\n                : 'bg-white/20 text-white/40 cursor-not-allowed'\n            }`}\n          >\n            Add\n          </button>\n        </div>\n      </form>\n\n      <div className=\"flex flex-wrap gap-3\">\n        {keywords.map((keyword, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.8 }}\n            className=\"flex items-center space-x-2 bg-yellow-400/20 text-yellow-300 px-4 py-2 rounded-full border border-yellow-400/30\"\n          >\n            <span className=\"font-medium\">{keyword}</span>\n            <button\n              onClick={() => onRemove(keyword)}\n              className=\"text-yellow-300/70 hover:text-yellow-300 transition-colors font-bold\"\n            >\n              ×\n            </button>\n          </motion.div>\n        ))}\n      </div>\n\n      <p className=\"text-white/60 text-sm mt-3\">\n        {keywords.length}/{maxKeywords} keywords added\n      </p>\n    </div>\n  );\n};\n\nexport default EnhancedNamingTool;"