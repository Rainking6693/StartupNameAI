{
  "name": "startupnamer-ai",
  "version": "1.0.0",
  "private": true,
  "description": "StartupNamer.ai - The AI-powered startup naming authority",
  "scripts": {
    "dev": "echo 'Use npm run dev from client or server directories'",
    "info": "bash scripts/deployment-info.sh",
    "install:all": "npm ci && cd client && npm ci && cd ../server && npm ci",
    "build": "cd client && npm run build:snap",
    "test": "cd client && npm run test:ci",
    "test:e2e": "cd client && npm run e2e",
    "lint": "cd client && npm run lint && cd ../server && npm run lint",
    "format": "cd client && npm run format && cd ../server && npm run format",
    "validate": "cd client && npm run validate:html && npm run validate:seo",
    "lighthouse": "cd client && npm run lighthouse:local",
    "serve": "cd client && npm run serve",
    "deploy:staging": "netlify deploy --dir=client/build",
    "deploy:production": "netlify deploy --dir=client/build --prod",
    "ci:quality": "npm run lint && npm run test",
    "ci:build": "npm run build && npm run validate",
    "ci:performance": "npm run lighthouse",
    "ci:e2e": "npm run test:e2e",
    "precommit": "npm run lint && npm run test",
    "dev:netlify": "netlify dev",
    "test:netlify": "bash scripts/test-netlify-build.sh",
    "test:react": "bash scripts/test-react-build.sh",
    "test:react-components": "node scripts/test-react-components.js",
    "test:react-routes": "node scripts/test-react-routes.js",
    "test:css-tailwind": "node scripts/test-css-tailwind.js",
    "test:react-deployment": "bash scripts/test-react-deployment.sh",
    "cache:bust": "bash scripts/cache-bust-deploy.sh",
    "deploy:test": "bash scripts/test-isolated-build.sh",
    "deploy:safe": "npm run test:netlify && npm run cache:bust && npm run deploy:production",
    "deploy:validate": "npm run test:netlify && npm run deploy:test",
    "react:validate": "npm run test:react-deployment",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down --volumes",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down --volumes --rmi all",
    "env:setup": "bash .devcontainer/setup.sh",
    "deployment:full-validation": "npm run test:react-deployment && npm run test:netlify && npm run deploy:test && npm run cache:bust",
    "help": "bash scripts/deployment-info.sh",
    "qa:master": "node scripts/master-integration.js run",
    "qa:master:quick": "node scripts/master-integration.js run quick",
    "qa:master:testing": "node scripts/master-integration.js run testing",
    "qa:monitor": "node scripts/master-integration.js monitor",
    "qa:health": "node scripts/master-integration.js health",
    "qa:error-correlator": "node scripts/error-correlator.js",
    "qa:error-correlator:monitor": "node scripts/error-correlator.js monitor",
    "qa:error-correlator:analyze": "node scripts/error-correlator.js analyze",
    "qa:error-correlator:health": "node scripts/error-correlator.js health",
    "qa:e2e": "node scripts/e2e-testing-suite.js",
    "qa:e2e:init": "node scripts/e2e-testing-suite.js && npm run e2e:install",
    "qa:accessibility": "node scripts/accessibility-validator.js audit",
    "qa:accessibility:quick": "node scripts/accessibility-validator.js quick http://localhost:3000",
    "qa:performance": "node scripts/performance-monitor.js comprehensive",
    "qa:performance:quick": "node scripts/performance-monitor.js quick",
    "qa:deployment-monitor": "node scripts/deployment-monitor.js",
    "qa:reporting": "node scripts/unified-reporting-system.js start",
    "qa:reporting:collect": "node scripts/unified-reporting-system.js collect",
    "qa:reporting:executive": "node scripts/unified-reporting-system.js executive",
    "e2e:install": "npx playwright install",
    "e2e:test": "npx playwright test",
    "e2e:test:headed": "npx playwright test --headed",
    "e2e:test:debug": "npx playwright test --debug",
    "e2e:integration": "node scripts/e2e-integration.js",
    "recovery:netlify-multer": "node scripts/recovery/netlify-multer-recovery.js",
    "recovery:react-timeout": "node scripts/recovery/react-timeout-recovery.js",
    "recovery:docker-environment": "node scripts/recovery/docker-environment-recovery.js",
    "git:status": "git status --short --branch",
    "git:log": "git log --oneline --graph --decorate --all -10",
    "git:branches": "git branch -a",
    "git:current": "git rev-parse --abbrev-ref HEAD",
    "git:sync": "node scripts/git-workflow-helper.js sync",
    "git:smart-commit": "node scripts/git-workflow-helper.js smart-commit",
    "git:feature-branch": "node scripts/git-workflow-helper.js create-feature",
    "git:hotfix-branch": "node scripts/git-workflow-helper.js create-hotfix",
    "git:cleanup": "node scripts/git-workflow-helper.js cleanup",
    "git:pre-commit": "npm run lint && npm run test && node scripts/git-workflow-helper.js validate-commit",
    "git:safe-push": "npm run git:pre-commit && git push",
    "git:pr-ready": "node scripts/git-workflow-helper.js pr-ready",
    "git:merge-main": "node scripts/git-workflow-helper.js merge-main",
    "git:rebase-interactive": "node scripts/git-workflow-helper.js rebase-interactive",
    "git:stash-save": "git stash push -m",
    "git:stash-pop": "git stash pop",
    "git:stash-list": "git stash list",
    "git:diff": "git diff --color-words",
    "git:diff-staged": "git diff --staged --color-words",
    "git:uncommit": "git reset --soft HEAD~1",
    "git:unstage": "git restore --staged .",
    "git:discard": "git restore .",
    "git:amend": "git commit --amend --no-edit",
    "git:amend-message": "git commit --amend",
    "dev:full": "concurrently \"cd client && npm start\" \"cd server && npm run dev\"",
    "dev:client": "cd client && npm start",
    "dev:server": "cd server && npm run dev",
    "dev:setup": "npm run install:all && npm run git:sync",
    "test:all": "npm run test && npm run test:e2e && npm run lighthouse",
    "workflow:new-feature": "node scripts/git-workflow-helper.js new-feature-workflow",
    "workflow:hotfix": "node scripts/git-workflow-helper.js hotfix-workflow",
    "workflow:release": "node scripts/git-workflow-helper.js release-workflow",
    "team:onboard": "node scripts/team-onboarding.js",
    "team:status": "node scripts/team-status.js",
    "workflow:smart-setup": "node scripts/smart-workflow-automation.js setup",
    "workflow:smart-branch": "node scripts/smart-workflow-automation.js branch",
    "workflow:smart-commit": "node scripts/smart-workflow-automation.js commit",
    "workflow:smart-pr": "node scripts/smart-workflow-automation.js pr",
    "workflow:stats": "node scripts/smart-workflow-automation.js stats",
    "dev:with-git": "concurrently \"npm run dev:full\" \"npm run git:status\"",
    "dev:frontend-focus": "node scripts/react-git-integration.js smart",
    "dev:react-only": "node scripts/react-git-integration.js start",
    "build:with-validation": "npm run lint && npm run test && npm run build",
    "pre-push": "npm run build:with-validation && npm run git:diff-staged"
  },
  "engines": {
    "node": ">=18.0.0.0.0",
    "npm": ">=8.0.0"
  },
  "devDependencies": {
    "chokidar": "^3.5.3",
    "concurrently": "^8.2.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.0.0"
  },
  "lint-staged": {
    "client/src/**/*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "server/src/**/*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run ci:quality"
    }
  }
}