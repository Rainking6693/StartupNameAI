{
  "name": "startupnamer-ai",
  "version": "1.0.0",
  "private": true,
  "description": "StartupNamer.ai - The AI-powered startup naming authority",
  "scripts": {
    "dev": "echo 'Use npm run dev from client or server directories'",
    "info": "echo 'Client: cd client && npm start | Server: cd server && npm run dev'",
    "install:all": "npm ci && cd client && npm ci && cd ../server && npm ci",
    "build": "cd client && npm run build:snap",
    "test": "cd client && npm run test:ci",
    "test:e2e": "cd client && npm run e2e",
    "lint": "cd client && npm run lint && cd ../server && npm run lint",
    "format": "cd client && npm run format && cd ../server && npm run format",
    "validate": "cd client && npm run validate:html && npm run validate:seo",
    "lighthouse": "cd client && npm run lighthouse:local",
    "serve": "cd client && npm run serve",
    "deploy:staging": "netlify deploy --dir=client/build",
    "deploy:production": "netlify deploy --dir=client/build --prod",
    "ci:quality": "npm run lint && npm run test",
    "ci:build": "npm run build && npm run validate",
    "ci:performance": "npm run lighthouse",
    "ci:e2e": "npm run test:e2e",
    "precommit": "npm run lint && npm run test",
    "dev:netlify": "netlify dev",
    "test:netlify": "bash scripts/test-netlify-build.sh",
    "test:react": "bash scripts/test-react-build.sh",
    "test:react-components": "node scripts/test-react-components.js",
    "test:react-routes": "node scripts/test-react-routes.js", 
    "test:css-tailwind": "node scripts/test-css-tailwind.js",
    "test:react-deployment": "bash scripts/test-react-deployment.sh",
    "cache:bust": "bash scripts/cache-bust-deploy.sh",
    "deploy:test": "bash scripts/test-isolated-build.sh",
    "deploy:safe": "npm run test:netlify && npm run cache:bust && npm run deploy:production",
    "deploy:validate": "npm run test:netlify && npm run deploy:test",
    "react:validate": "npm run test:react-deployment",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down --volumes",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down --volumes --rmi all",
    "env:setup": "bash .devcontainer/setup.sh",
    "deployment:full-validation": "npm run test:react-deployment && npm run test:netlify && npm run deploy:test && npm run cache:bust",
    "info": "bash scripts/deployment-info.sh",
    "help": "bash scripts/deployment-info.sh",
    "qa:master": "node scripts/master-integration.js run",
    "qa:master:quick": "node scripts/master-integration.js run quick",
    "qa:master:testing": "node scripts/master-integration.js run testing",
    "qa:monitor": "node scripts/master-integration.js monitor",
    "qa:health": "node scripts/master-integration.js health",
    "qa:error-correlator": "node scripts/error-correlator.js",
    "qa:error-correlator:monitor": "node scripts/error-correlator.js monitor",
    "qa:error-correlator:analyze": "node scripts/error-correlator.js analyze",
    "qa:error-correlator:health": "node scripts/error-correlator.js health",
    "qa:e2e": "node scripts/e2e-testing-suite.js",
    "qa:e2e:init": "node scripts/e2e-testing-suite.js && npm run e2e:install",
    "qa:accessibility": "node scripts/accessibility-validator.js audit",
    "qa:accessibility:quick": "node scripts/accessibility-validator.js quick http://localhost:3000",
    "qa:performance": "node scripts/performance-monitor.js comprehensive",
    "qa:performance:quick": "node scripts/performance-monitor.js quick",
    "qa:deployment-monitor": "node scripts/deployment-monitor.js",
    "qa:reporting": "node scripts/unified-reporting-system.js start",
    "qa:reporting:collect": "node scripts/unified-reporting-system.js collect",
    "qa:reporting:executive": "node scripts/unified-reporting-system.js executive",
    "e2e:install": "npx playwright install",
    "e2e:test": "npx playwright test",
    "e2e:test:headed": "npx playwright test --headed",
    "e2e:test:debug": "npx playwright test --debug",
    "e2e:integration": "node scripts/e2e-integration.js",
    "recovery:netlify-multer": "node scripts/recovery/netlify-multer-recovery.js",
    "recovery:react-timeout": "node scripts/recovery/react-timeout-recovery.js",
    "recovery:docker-environment": "node scripts/recovery/docker-environment-recovery.js"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "devDependencies": {
    "concurrently": "^8.2.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.0.0"
  },
  "lint-staged": {
    "client/src/**/*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "server/src/**/*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run ci:quality"
    }
  }
}